{"version":3,"file":"app~7bd12dde.bundle.js","mappings":";oZACA,svNAIA,IAAQA,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IAwBF,QArBsB,CACdC,SAAQ,SAACC,GAAI,oGACZA,EAAI,CAAF,gEAGOP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAJjC,EAKnB,EACME,YAAW,WAAG,iHACJT,EAAS,uCAAEU,OAAOX,IAAiB,0CAD/B,EAEpB,EACMY,SAAQ,SAACC,GAAO,oGACfA,EAAMC,eAAe,MAAO,CAAF,gEAGjBb,EAAS,uCAAEc,IAAIf,EAAmBa,IAAK,0CAJjC,EAKtB,EACMG,YAAW,SAACR,GAAI,iHACNP,EAAS,8CAASD,EAAmBQ,IAAE,0CADjC,EAEtB,+CCvBF,QANqB,CACnBS,KAAM,GAAF,OAAKnB,EAAAA,EAAAA,SAAe,QACxBoB,OAAQ,SAACV,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,kBAAUU,EAAE,EAC9CW,YAAa,GAAF,OAAKrB,EAAAA,EAAAA,SAAe,2QCJjC,knGAAAsB,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,0lBAAAA,EAAA,EAAAA,EAAA,SAAAA,IAAA,SAAAA,GAAA,+GAwBA,QAtBmB,yBAFnB,4FAEmB,SAFnB,QAcG,EAPA,EALgB,EAmBhB,OArBH,EAEmB,OAFnB,EAEmB,4CACjB,sGACyBC,MAAMC,EAAAA,MAAkB,OAAjC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,kFAED,oFAC8C,OAAtCH,EAAWI,EAAAA,EAAAA,cAA2B,kBACrCJ,GAAQ,2CAGhB,0FAED,WAA8Bf,GAAE,yFACPa,MAAMC,EAAAA,OAAoBd,IAAI,OAAvC,OAARe,EAAW,EAAH,cACaA,EAASC,OAAM,OAChB,OADpBC,EAAe,EAAH,KAClBG,QAAQC,IAAIJ,GAAc,kBAClBA,EAAaK,YAAU,2CAChC,+CArBH,6DAqBG,EAnBgB,mCCSnB,QAZe,CACbC,IAAK,gBACLC,SAAU,uCACVC,eAAgB,oDAChBpC,cAAe,iBACfE,iBAAkB,EAClBC,kBAAmB,MAEnBkC,kBAAmB,kDACnBC,YAAY,IAAIC,MAAOC,2FCKnBC,gBAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,oBAC/BC,OAAQF,SAASC,cAAc,qBAC/BE,QAASH,SAASC,cAAc,mBAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,KACAC,EAAAA,EAAAA,KAAwBnD,EAAAA,EAAAA,kBAC1B","sources":["webpack://delicious-restaurant/./src/scripts/data/favorite-resto.js","webpack://delicious-restaurant/./src/scripts/globals/api-endpoint.js","webpack://delicious-restaurant/./src/scripts/data/res-source.js","webpack://delicious-restaurant/./src/scripts/globals/config.js","webpack://delicious-restaurant/./src/scripts/index.js"],"sourcesContent":["/* eslint-disable consistent-return */\n/* eslint-disable no-prototype-builtins */\nimport { openDB } from 'idb';\nimport CONFIG from '../globals/config';\n\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\n\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n  upgrade(database) {\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n  },\n});\n\nconst FavoriteResto = {\n  async getResto(id) {\n    if (!id) {\n      return;\n    }\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\n  },\n  async getAllResto() {\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\n  },\n  async putResto(resto) {\n    if (!resto.hasOwnProperty('id')) {\n      return;\n    }\n    return (await dbPromise).put(OBJECT_STORE_NAME, resto);\n  },\n  async deleteResto(id) {\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\n  },\n};\n\nexport default FavoriteResto;\n","import CONFIG from './config';\n\nconst API_ENDPOINT = {\n  LIST: `${CONFIG.BASE_URL}list`,\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\n  POST_REVIEW: `${CONFIG.BASE_URL}review`,\n};\n\nexport default API_ENDPOINT;\n","import API_ENDPOINT from '../globals/api-endpoint';\nimport FavoriteResto from './favorite-resto';\n\nclass TheRestaurant {\n  static async listRestaurant() {\n    const response = await fetch(API_ENDPOINT.LIST);\n    const responseJson = await response.json();\n    return responseJson.restaurants;\n  }\n\n  static async favResto() {\n    const response = FavoriteResto.getAllResto();\n    return response;\n    // const responseJson = await response.json();\n    // return responseJson.restaurants;\n  }\n\n  static async detailRestaurant(id) {\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\n    const responseJson = await response.json();\n    console.log(responseJson);\n    return (responseJson.restaurant);\n  }\n}\n\nexport default TheRestaurant;\n","const CONFIG = {\n  KEY: '4587609450967',\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/large/',\n  DATABASE_NAME: 'favorite-resto',\n  DATABASE_VERSION: 1,\n  OBJECT_STORE_NAME: 'fav',\n\n  WEB_SOCKET_SERVER: 'wss://javascript.info/article/websocket/chat/ws',\n  CACHE_NAME: new Date().toISOString(),\n};\n\nexport default CONFIG;\n","/* eslint-disable no-unused-vars */\nimport 'regenerator-runtime';\nimport '../styles/style.css';\nimport '../styles/responsive.css';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\nimport WebSocketInitiator from './utils/websocket-initiator';\nimport CONFIG from './globals/config';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\nconst START = 10;\nconst NUMBER_OF_IMAGES = 100;\n\nconst app = new App({\n  button: document.querySelector('#hamburgerButton'),\n  drawer: document.querySelector('#navigationDrawer'),\n  content: document.querySelector('#mainContent'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n  WebSocketInitiator.init(CONFIG.WEB_SOCKET_SERVER);\n});\n"],"names":["DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getResto","id","get","getAllResto","getAll","putResto","resto","hasOwnProperty","put","deleteResto","LIST","DETAIL","POST_REVIEW","i","fetch","API_ENDPOINT","response","json","responseJson","restaurants","FavoriteResto","console","log","restaurant","KEY","BASE_URL","BASE_IMAGE_URL","WEB_SOCKET_SERVER","CACHE_NAME","Date","toISOString","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister","WebSocketInitiator"],"sourceRoot":""}